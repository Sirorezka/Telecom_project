class(gr_sample[,'msisdn']) <- 'character'
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type ),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i))
track_plot
##
##  Generating train set
##
all_fact_ids <- c(data_fact[,1],data_fact[,2])
data_train <- data[data[,'msisdn'] %in% all_fact_ids,]
y_train <- generate_all_combin (all_fact_ids)
all_fact_ids
View(y_train)
source ('my_utils.R')
y_train <- generate_all_combin (all_fact_ids)
y_train["class"] <- 0
y_train[,c("V1","V2")] %in% data_train
y_train[,c("V1","V2")]
data_train
y_train[,c("V1","V2")] %in% all_fact_ids
y_train[,c("V1","V2")] %in% data_fact
y_train[,c("V1","V2")]
y_train[,"V1"] %in% data_fact[,1]
y_train[,"V1"] %in% data_fact[,1] && y_train[,"V2"] %in% data_fact[,2]
y_train[,"V1"] %in% data_fact[,1] & y_train[,"V2"] %in% data_fact[,2]
y_train[class1,"class"] <- 1
class1 <- y_train[,"V1"] %in% data_fact[,1] & y_train[,"V2"] %in% data_fact[,2]
y_train[class1,"class"] <- 1
y_train
class1 <- y_train[,"V1"] %in% data_fact[,1] && y_train[,"V2"] %in% data_fact[,2]
class1
cl_key1 <- y_train[,"V1"] %in% data_fact[,1]
cl_key1
y_train[,"class"] <- 0
row
for (row in data_fact){
row
}
y_train[,"V2"]
paste0(y_train[,"V1"],y_train[,"V2"], collapse = NULL)
aa <- paste0(y_train[,"V1"],y_train[,"V2"], collapse = NULL)
aa
aa <- paste0(y_train[,"V1"],"_",y_train[,"V2"], collapse = NULL)
aa
bb <- paste0(data_fact[,1],"_",data_fact[,2], collapse = NULL)
class1 <- aa %in% bb
y_train[class1,"class"] <- 1
y_train
data_fact[data_fact[,1] == 158503439635,]
data_fact[data_fact[,1] == 158502336809,]
i <- 1
gr1 <- y_train[i,]  # msisdns that will be plotted
gr1
y_train
y_train
y_train[,"class"]
order(y_train[,"class"] )
y_train[order(y_train[,"class"] ),]
kk <- y_train[order(y_train[,"class"] ),]
View(gr1)
View(kk)
kk <- y_train[order(y_train[,"class"],  decreasing = TRUE),]
View(kk)
y_train <- y_train[order(y_train[,"class"],  decreasing = TRUE),]
View(y_train)
row.names(y_train)
y_train <- y_train[1:1300,]
View(y_train)
row.names(y_train) <- 1:nrow(y_train)
View(y_train)
View(data_fact)
if (!require (xlsx)) install.packages ("xlsx")
if (!require (dplyr)) install.packages ("dplyr")
if (!require (tidyr)) install.packages ("tidyr")
if (!require (ggplot2)) install.packages ("ggplot2")
if (!require (gtools)) install.packages ("gtools")
require (xlsx)
require (dplyr)
require (tidyr)
require (ggplot2)
source ('my_utils.R')
####
####  --- Reading data sets  ----
####
mywd <- "C:/Users/Johnny/Documents/GitHub/test_task"
#mywd <- "C:/Users/Ivan.Petrov/Documents/GitHub/test_task"
setwd (mywd)
getwd()
data_fact <- read.xlsx ("data/01_facts.xlsx", sheetIndex=1, header= FALSE)
data <- read.csv2 ("data/02_Data_test.csv", header= TRUE)
data_tac <- read.csv2 ("data/03_devices.csv", header= FALSE, quote = '"')
####
####  --- Processing tac table  ----
####
tt <- gsub('"','',data_tac[,1], perl=TRUE)
col_names <- strsplit (tt[1],",",perl=TRUE)[[1]]
col_names[2:4] <- c("device_vendor","device_platform","device_type")
tt <- tt[2:length(tt)]
data_tac <- as.data.frame(tt) %>% separate("tt",into = col_names, sep = ",")
####
####  --- Processing fact table  ----
####
# Searching for duplicates in fact table
data_fact <- as.data.frame(data_fact)
c1 <- as.data.frame(data_fact[,1])
c2 <- as.data.frame(data_fact [,2])
c1[duplicated(bind_rows(c1,c2)),]
as.character(data_fact[data_fact[,1]==158528850493,2])
rm(c1,c2)
# switching elements where in first column elem is greater than in second
# and ordering elements
for (i in 1:nrow(data_fact)){
if (data_fact[i,1]>data_fact[i,2]){
k <- data_fact[i,2]
data_fact[i,2]  <- data_fact[i,1]
data_fact[i,1] <- k
}
}
data_fact <- data_fact[order(data_fact [,1]),]
####
####  --- Preparing data table ----
####
# changing time to minutes
sec <- data[,'tstamp']/1000
data[,'tstamp'] <- as.POSIXct(sec,origin = "1970-01-01",tz = "Europe/Moscow")
c1 <- round(data[,'tstamp'], units = c("mins"))
c1 <- as.data.frame(c1)
data[,'tstamp'] <- c1
all_msisdn <- unique(data[,'msisdn'])
all_msisdn <- all_msisdn[order(all_msisdn)]
# joining tac
data[,'tac'] <- substr(data[,'imei'],1,8)
data <- data %>% left_join (data_tac, by=("tac"))
data[is.na(data$device_type),"device_type"] = -1
data[is.na(data$device_platform),"device_platform"] = -1
data[is.na(data$device_vendor),"device_vendor"] = -1
#cbind(z[1], all_msisdn[all_msisdn>z[1]])
####
####  --- Plotting paths ----
####
#gr1 <- c( 158530004641, 158528850493,158524011021)
# plot all paths on one graph with imei codes. We are searching for data with matching imei codes
for (i in 1:nrow(data_fact[,])){
#i <- 1
gr1 <- data_fact[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_imei", width = 14, height = 7,  dpi = 300)
}
i <- 95
gr1 <- data_fact[i,]  # msisdns that will be plotted
gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
# generating plot labels and removing duplicated lables
class(gr_sample[,'msisdn']) <- 'character'
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type ),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i))
track_plot
##
##  Generating train set
##
all_fact_ids <- c(data_fact[,1],data_fact[,2])
data_train <- data[data[,'msisdn'] %in% all_fact_ids,]
source ('my_utils.R')
y_train <- generate_all_combin (all_fact_ids)
y_train[,"class"] <- 0
## defining msisdn match class
aa <- paste0(y_train[,"V1"],"_",y_train[,"V2"], collapse = NULL)
bb <- paste0(data_fact[,1],"_",data_fact[,2], collapse = NULL)
class1 <- aa %in% bb
y_train[class1,"class"] <- 1
## y have a lot of null values we will leave only part of them
y_train <- y_train[order(y_train[,"class"],  decreasing = TRUE),]
y_train <- y_train[1:1300,]
row.names(y_train) <- 1:nrow(y_train)
if (!require (xlsx)) install.packages ("xlsx")
if (!require (dplyr)) install.packages ("dplyr")
if (!require (tidyr)) install.packages ("tidyr")
if (!require (ggplot2)) install.packages ("ggplot2")
if (!require (gtools)) install.packages ("gtools")
require (xlsx)
require (dplyr)
require (tidyr)
require (ggplot2)
source ('my_utils.R')
####
####  --- Reading data sets  ----
####
mywd <- "C:/Users/Johnny/Documents/GitHub/test_task"
#mywd <- "C:/Users/Ivan.Petrov/Documents/GitHub/test_task"
setwd (mywd)
getwd()
data_fact <- read.xlsx ("data/01_facts.xlsx", sheetIndex=1, header= FALSE)
data <- read.csv2 ("data/02_Data_test.csv", header= TRUE)
data_tac <- read.csv2 ("data/03_devices.csv", header= FALSE, quote = '"')
####
####  --- Processing tac table  ----
####
tt <- gsub('"','',data_tac[,1], perl=TRUE)
col_names <- strsplit (tt[1],",",perl=TRUE)[[1]]
col_names[2:4] <- c("device_vendor","device_platform","device_type")
tt <- tt[2:length(tt)]
data_tac <- as.data.frame(tt) %>% separate("tt",into = col_names, sep = ",")
####
####  --- Processing fact table  ----
####
# Searching for duplicates in fact table
data_fact <- as.data.frame(data_fact)
c1 <- as.data.frame(data_fact[,1])
c2 <- as.data.frame(data_fact [,2])
c1[duplicated(bind_rows(c1,c2)),]
as.character(data_fact[data_fact[,1]==158528850493,2])
rm(c1,c2)
# switching elements where in first column elem is greater than in second
# and ordering elements
for (i in 1:nrow(data_fact)){
if (data_fact[i,1]>data_fact[i,2]){
k <- data_fact[i,2]
data_fact[i,2]  <- data_fact[i,1]
data_fact[i,1] <- k
}
}
data_fact <- data_fact[order(data_fact [,1]),]
####
####  --- Preparing data table ----
####
# changing time to minutes
sec <- data[,'tstamp']/1000
data[,'tstamp'] <- as.POSIXct(sec,origin = "1970-01-01",tz = "Europe/Moscow")
c1 <- round(data[,'tstamp'], units = c("mins"))
c1 <- as.data.frame(c1)
data[,'tstamp'] <- c1
all_msisdn <- unique(data[,'msisdn'])
all_msisdn <- all_msisdn[order(all_msisdn)]
# joining tac
data[,'tac'] <- substr(data[,'imei'],1,8)
data <- data %>% left_join (data_tac, by=("tac"))
data[is.na(data$device_type),"device_type"] = -1
data[is.na(data$device_platform),"device_platform"] = -1
data[is.na(data$device_vendor),"device_vendor"] = -1
#cbind(z[1], all_msisdn[all_msisdn>z[1]])
####
####  --- Plotting paths ----
####
#gr1 <- c( 158530004641, 158528850493,158524011021)
# plot all paths on one graph with imei codes. We are searching for data with matching imei codes
for (i in 1:nrow(data_fact[,])){
#i <- 1
gr1 <- data_fact[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_imei", width = 14, height = 7,  dpi = 300)
}
i <- 95
gr1 <- data_fact[i,]  # msisdns that will be plotted
gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
# generating plot labels and removing duplicated lables
class(gr_sample[,'msisdn']) <- 'character'
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type ),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i))
track_plot
##
##  Generating train set
##
all_fact_ids <- c(data_fact[,1],data_fact[,2])
data_train <- data[data[,'msisdn'] %in% all_fact_ids,]
source ('my_utils.R')
y_train <- generate_all_combin (all_fact_ids)
y_train[,"class"] <- 0
## defining msisdn match class
aa <- paste0(y_train[,"V1"],"_",y_train[,"V2"], collapse = NULL)
bb <- paste0(data_fact[,1],"_",data_fact[,2], collapse = NULL)
class1 <- aa %in% bb
y_train[class1,"class"] <- 1
## y have a lot of null values we will leave only part of them
y_train <- y_train[order(y_train[,"class"],  decreasing = TRUE),]
y_train <- y_train[1:1300,]
row.names(y_train) <- 1:nrow(y_train)
for (i in 1:nrow(y_train[,])){
i <- 1
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[,"class"]))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
for (i in 1:nrow(y_train[,])){
i <- 1
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[,"class"]))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
for (i in 1:nrow(y_train[,])){
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[i,"class"]))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
all_fact_ids <- c(data_fact[,1],data_fact[,2])
data_train <- data[data[,'msisdn'] %in% all_fact_ids,]
source ('my_utils.R')
y_train <- generate_all_combin (all_fact_ids)
y_train[,"class"] <- 0
## defining msisdn match class
aa <- paste0(y_train[,"V1"],"_",y_train[,"V2"], collapse = NULL)
bb <- paste0(data_fact[,1],"_",data_fact[,2], collapse = NULL)
class1 <- aa %in% bb
y_train[class1,"class"] <- 1
## y have a lot of null values we will leave only part of them
y_train <- y_train[order(y_train[,"class"],  decreasing = TRUE),]
y_train
View(y_train)
y_train_0 <- y_train[y_train$class==0,]
y_train_0
y_train_1 <- y_train[y_train$class==1,]
sample(len(y_train_0),100)
sample(length(y_train_0),100)
sample(n_row(y_train_0),100)
sample(nrow(y_train_0),100)
sample(nrow(y_train_0),1100)
y_train_0 <- y_train[sample(nrow(y_train_0),1100),]
y_train_0
y_train_0 <- y_train_0[sample(nrow(y_train_0),1100),]
y_train_0
y_train_1 <- y_train[y_train$class==1,]
y_train_0 <- y_train[y_train$class==0,]
y_train_0 <- y_train_0[sample(nrow(y_train_0),1100),]
y_train_0
View(y_train_0)
y_train <- bind_rows(y_train_0,y_train_1)
View(y_train)
rm(y_train_0,y_train_1)
for (i in 1:nrow(y_train[,])){
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[i,"class"]))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
for (i in 1:nrow(y_train[,])){
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[i,"class"]))
track_plot
filename <- paste0(i,"_",data_fact[i,1],"_",data_fact[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
View(y_train)
i <- 400
gr1 <- y_train[i,]  # msisdns that will be plotted
gr1
gr_sample <- data[data[,'msisdn'] %in% gr1,]
gr_sample
plot_all_y_train <- function (y_train, data){
for (i in 1:nrow(y_train[,])){
i <- 400
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[i,"class"]))
track_plot
filename <- paste0(i,"_",y_train[i,1],"_",y_train[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
}
all_fact_ids <- c(data_fact[,1],data_fact[,2])
data_train <- data[data[,'msisdn'] %in% all_fact_ids,]
source ('my_utils.R')
y_train <- generate_all_combin (all_fact_ids)
y_train[,"class"] <- 0
## defining msisdn match class
aa <- paste0(y_train[,"V1"],"_",y_train[,"V2"], collapse = NULL)
bb <- paste0(data_fact[,1],"_",data_fact[,2], collapse = NULL)
class1 <- aa %in% bb
y_train[class1,"class"] <- 1
## we need to take all pairs from class 1 and make sample for class zero
y_train_1 <- y_train[y_train$class==1,]
y_train_0 <- y_train[y_train$class==0,]
y_train_0 <- y_train_0[sample(nrow(y_train_0),1100),]
y_train <- bind_rows(y_train_1,y_train_0)
rm(y_train_0,y_train_1)
plot_all_y_train (y_train, data)
plot_all_y_train <- function (y_train, data){
for (i in 1:nrow(y_train[,])){
#i <- 400
gr1 <- y_train[i,]  # msisdns that will be plotted
#gr_sample <- data[data[,'msisdn'] %in% gr1,c("msisdn","imei","tstamp","long","lat","start_angle","end_angle")]
gr_sample <- data[data[,'msisdn'] %in% gr1,]
class(gr_sample[,'msisdn']) <- 'character'
# generating plot labels and removing duplicated lables
d_labels <- as.character(gr_sample[,'imei'])
labels_dupl <- duplicated (gr_sample[,c('imei','msisdn','long','lat')])
d_labels[labels_dupl] <- ""
v_jitter <- runif(nrow(gr_sample), 0, 3) # labels jitter
track_plot <- ggplot(gr_sample, aes(x= long, y=lat)) + geom_point(alpha=0.2, aes(color=device_type),size=8)
track_plot <- track_plot + geom_point(shape = 1,size = 8,colour = "black")
#track_plot <- track_plot+ geom_point() +geom_text(data=gr_sample, aes(x=long, y = lat,label=d_labels),size=4,hjust=0, vjust=v_jitter)
track_plot <- track_plot + facet_grid(. ~ msisdn ) + ggtitle(paste0("Series # ",i," -- class #",y_train[i,"class"]))
track_plot
filename <- paste0(i,"_",y_train[i,1],"_",y_train[i,2],".jpg")
ggsave(filename, plot = track_plot, path = "plots_train_imei", width = 14, height = 7,  dpi = 300)
}
}
plot_all_y_train (y_train, data)
